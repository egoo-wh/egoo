#!/usr/bin/env node
import{createRequire as e}from"module";import t from"path";import s from"yargs";import r from"ansi-colors";import{EventEmitter as i}from"events";import n from"fancy-log";import a from"node-fetch";import o from"lodash";import"prompt";import c,{promises as l,createReadStream as h,createWriteStream as u}from"fs";import"stream";import p from"iconv-lite";import{Transform as d}from"readable-stream";import m from"pump";import f from"pumpify";import g from"jschardet";import{Client as w}from"ssh2";import y from"os";import P from"crypto";import{AsyncSeriesHook as $,AsyncSeriesBailHook as v,SyncWaterfallHook as b}from"tapable";import x from"spritesmith";import S from"js-beautify";import E from"mammoth";import{load as T}from"cheerio";import{fileURLToPath as k}from"url";class I extends i{constructor(){super(),this.on("shutdown",this.shutdownHandler)}}function F(e,t=""){let s;switch(t){case"PATH":s=r.cyan;break;case"ERROR":s=r.red;break;case"STEP":s=r.yellow;break;case"TIP":s=r.magenta;break;case"SUCCESS":s=r.green;break;case"UNDERLINE":s=r.underline;break;default:s=r.white}return s(e)}function C(e){return(...t)=>{n.info(`${e}: `,...t)}}let R;function j(...e){if(!R)throw new Error("use setAppRoot before");return t.join(R,...e)}function H(...e){return e.reduce(((e,t)=>{let s="";return s="string"==typeof t?t:Array.isArray(t)?t.join("/"):t.toString(),e?e+"/"+s:s}),"")}function _(e){return"http://cli.egooidea.com/"+e}function U(e){return j("data",e)}async function O(e,s){if(!s)throw new Error("no handler function");let r;try{r=await l.lstat(e)}catch(e){throw new Error("src is invalid")}if(r){if(r.isDirectory()){s&&s.call(null,{filePath:e,type:"dir"});let r=(await l.readdir(e)).map((r=>{if(!/(^|\/)\.[^\/\.]/g.test(r))return O(t.join(e,r),s)}));return Promise.all(r)}{let t=s&&s.call(null,{filePath:e,type:"file"});return!(i=t)||"object"!=typeof i&&"function"!=typeof i||"function"!=typeof i.then?Promise.resolve(t):t}var i}}function D(e,t,s,...r){if(!e)throw new Error("can't find function for sfcall.");return new Promise(((i,n)=>{try{e.apply(t,r.concat((function(e){s?i(!e):e?n(e):i()})))}catch(e){n(e)}}))}async function A(e,t){if(!t)throw new Error("cp dest is empty");let s;try{s=await l.lstat(e)}catch(e){throw new Error("cp src is not exist")}if(s.isDirectory()){let e;try{e=await l.lstat(t)}catch(e){return l.mkdir(t,511)}return e.isDirectory()?Promise.resolve():l.mkdir(t,511)}return l.copyFile(e,t)}let Q={};function N(e){return new Promise((function(t,s){let r;if(Q&&e&&Q[e])r=Q[e],t(r);else{let r,i=h(e,{emitClose:!0});i.on("error",(e=>{s(e)})),i.on("data",(function(t){let s=g.detect(t);r=s.encoding,Q[e]=r,i.close()})),i.on("close",(function(e){r=r||"utf8",t(r)}))}}))}var q={detectFileEncode:N,isFileEncodeEqual:function(e,t){let s=e.toUpperCase(),r=t.toUpperCase();if(s==r)return!0;let i=[["UTF8","UTF-8"],["GBK","GB2312"]];for(let e=0;e<i.length;e++){let t=i[e].indexOf(s);if(t>=0)return i[e][(t+1)%2]==r}return!0},modify:async function(e,t,s){s=s||[];const r=await N(e);if(!p.encodingExists(r))throw new Error("unsupport encoding "+r);return new Promise(((i,n)=>{let a=h(e,{highWaterMark:1056784}),o=u(t);const c=function(e,t,s){function r(e){return e}switch(e=e||/(\r?\n)/,t=t||r,s=s||{},arguments.length){case 1:"function"==typeof e?(t=e,e=/(\r?\n)/):"object"!=typeof e||e instanceof RegExp||(s=e,e=/(\r?\n)/);break;case 2:"function"==typeof e?(s=t,t=e,e=/(\r?\n)/):"object"==typeof t&&(s=t,t=r)}let i="";return(s=Object.assign({},s)).transform=function(s,r,n){var a;i+=s,a=i.split(e),i=a.pop();for(var o=0;o<a.length;o++)try{this.push(t(a[o]))}catch(e){return n(e)}n()},s.flush=function(e){if(i)try{this.push(t(i))}catch(t){return e(t)}e()},s.readableObjectMode=!0,new d(s)}((e=>s.reduce(((e,t)=>t(e)),e)));let l=new f(p.decodeStream(r),c,p.encodeStream(r));m(a,l,o,(e=>{e?n(e):i()}))}))},modifyByStreams:async function(e,t,s){const r=await N(e);if(!p.encodingExists(r))throw new Error("unsupport encoding "+r);return new Promise(((i,n)=>{let a=h(e,{highWaterMark:1056784}),o=u(t),c=new f(p.decodeStream(r),...s,p.encodeStream(r));m(a,c,o,(e=>{e?n(e):i()}))}))},createFolder:async function(e){let t;try{t=await l.lstat(e)}catch(t){return l.mkdir(e,511)}return!!t.isDirectory()||l.mkdir(e,511)}};class L{patchs=[];mergedInfos;infos=[];constructor(){}register(e){if(this.patchs||(this.patchs=[]),this.patchs){if(this.patchs.some((t=>t.name===e.name)))return}this.patchs.push(e)}registers(e){e.forEach((e=>{this.register(e)}))}detect(e){return this.patchs.filter((t=>t.detect(e)))}add(e,s,r=null){if(this.infos.some((e=>e.src.indexOf(s)>=0)))throw new Error("重复add，请检查");let i;if(r)i=new W(s,r,[]);else{let e=t.basename(s);if("~"===e.substring(0,1))throw new Error(`文件不能以~开头，请修改 ${s}`);{let r=t.join(s,"..","~"+e);i=new W(s,r,[]),i.isTempFileDest=!0}}return i.patchs=e,this.infos.push(i),i}detectAndAdd(e,t=null){let s=this.detect(e);return s&&s.length>0?this.add(s,e,t):null}async run(e){const t=e.patchs.map((t=>t.run(e)));return await q.modify(e.src,e.dest,t)}async runAll(){const e=this.infos.map((e=>this.run(e)));return Promise.resolve(e)}getPatch(e){return this.patchs.find((t=>t.name===e))}async clear(){const e=this.infos.map((async e=>e.isTempFileDest?await l.unlink(e.dest):Promise.resolve()));return Promise.all(e)}}class M{name;constructor(e){this.name=e}toString(){return this.name}}class W{src;dest;patchs;isTempFileDest=!1;constructor(e,t,s){this.src=e,this.dest=t,this.patchs=s}equal(e){return e.src==this.src&&e.dest==this.dest}merge(e){this.patchs=this.patchs.concat(e.patchs)}clone(){return new W(this.src,this.dest,this.patchs)}}const B=/((src|href)\s*\=\s*['"])http(s)?\:/g,G=/(url\(\s*['"]?)http(s)?\:/g;class J extends M{warningWhenNotHttps=!1;constructor(){super("DeleteProtocolPatch")}setWaringWhenNotHttps(e){this.warningWhenNotHttps=e}async prepare(){return Promise.resolve()}detect(e){const s=t.extname(e);return[".html",".shtml",".htm",".inc",".css"].indexOf(s)>=0}run(e){const s=t.extname(e.src),r=[".css"].indexOf(s)>=0;return this._replace(r)}_replace(e){var t=this;return s=>{let r=s;return e?r=t.deleteProtocolInStyle(r):(r=t.deleteProtocolInStyle(r),r=t.deleteProtocolInHTMLTag(r)),r}}_stream(e){var t=this;return new d({transform:function(s,r,i){e?s=t.deleteProtocolInStyle(s):(s=t.deleteProtocolInStyle(s),s=t.deleteProtocolInHTMLTag(s)),this.push(s),i()}})}deleteProtocolInStyle(e){return this.warningWhenNotHttps?(this.warningWhenFindHttp(e),e):e=e.replace(G,(e=>e?e.replace(/http(s)?\:/,""):e))}deleteProtocolInHTMLTag(e){return this.warningWhenNotHttps?(this.warningWhenFindHttp(e),e):e=e.replace(B,(e=>e?e.replace(/http(s)?\:/,""):e))}warningWhenFindHttp(e){const t=e.match(B),s=t?t[0]:"";if(s&&s.search("http:")>=0)throw new Error(`强制https时发现http，请检查 ${e} 后重新分离。`)}}const z=/<([^>]+)\s*(src|href|poster)(\s*=['"])(\.+\/)*(images|ossweb-img)(.*['"])[^>]*/g,V=/([#\s\w]*)(url\(\s*['"]?)(\.+\/)*(images|ossweb-img)/g;class K extends M{fenliPath;constructor(){super("FenliPatch")}setFenliPath(e){this.fenliPath=e}async prepare(){return Promise.resolve()}detect(e){const s=t.extname(e);return[".html",".shtml",".htm",".inc",".css"].indexOf(s)>=0}run(e){if(!this.fenliPath)throw new Error("分离地址为空，请检查。");const s=t.extname(e.src),r=[".css"].indexOf(s)>=0;return this._replace(r)}_replace(e){var t=this;return s=>{let r=s;return e?r=t.replaceRelativeUrlsInStyle(r):(r=t.replaceRelativeUrlsInStyle(r),r=t.replaceRelativeUrlsInHTMLTag(r)),r}}_stream(e){var t=this;return new d({transform:function(s,r,i){console.log("chunk-----"),console.log(s.substr(0,100)),console.log(s.substr(s.length-100)),console.log("chunk+++++"),e?s=t.replaceRelativeUrlsInStyle(s):(s=t.replaceRelativeUrlsInStyle(s),s=t.replaceRelativeUrlsInHTMLTag(s)),this.push(s),i()}})}replaceRelativeUrlsInStyle(e){return e=e.replace(V,(e=>e?e.replace(/(\.+\/)*(images|ossweb-img)/g,this.fenliPath):e))}replaceRelativeUrlsInHTMLTag(e){return e=e.replace(z,((e,t,s,r,i,n)=>e?e.replace(/(\.+\/)*(images|ossweb-img)/g,this.fenliPath):e))}}const X=C("Fenli");class Y extends I{sources;forceHttps;fenliPath;patchInstaller;constructor(e,t=!1){super(),this.sources=e,this.forceHttps=t}async run(e,t){try{await this.init(e,t),await this.start(),X(F("fenli success.","SUCCESS"))}catch(e){throw X(F("fenli fail.","ERROR")),X(F(e,"ERROR")),X(e.stack),e}}async init(e,t){const s=await this.getFenliPath(e,t);this.fenliPath=o.trim(s),this.forceHttps&&(this.fenliPath=this.fenliPath.replace(/http(s)?:/,""),this.fenliPath=`https:${this.fenliPath}`),this.patchInstaller=new L;const r=new K,i=new J;return this.patchInstaller.register(r),this.patchInstaller.register(i),this.forceHttps&&i.setWaringWhenNotHttps(!0),s}async start(){return this.sources.reduce((async(e,t)=>{try{await e,X(F(`start ${F(t,"PATH")}`,"STEP")),await this.startOne(t)}catch(e){return Promise.reject(e)}return X(F(`finish ${F(t,"PATH")}`,"STEP")),Promise.resolve()}),Promise.resolve())}startOne(e){"/"===e.substr(e.length-1)&&(e=e.substr(0,e.length-1));const s=e+"分离后",r=t.basename(e);return this.patchInstaller.getPatch("FenliPatch").setFenliPath(this.fenliPath+r),O(e,(({filePath:r,type:i})=>{let n=t.join(s,t.relative(e,r));if("file"===i){let s=this.patchInstaller.detectAndAdd(r,n);return s?(X(F(`replace ${F(t.relative(e,r),"PATH")} > ${F(t.relative(e,n),"PATH")}`)),this.patchInstaller.run(s)):(X(F(`cp ${F(t.relative(e,r),"PATH")} > ${F(t.relative(e,n),"PATH")}`)),A(r,n))}return X(F(`create dir ${F(t.relative(e,n),"PATH")}`)),A(r,n)}))}async getFenliPath(e,t){if(e){let t=(await this.loadFenliData()).find((t=>t.product.indexOf(e.toLowerCase())>=0));return t?Promise.resolve(t.url):Promise.reject(new Error("未找到别名("+e+")的分离地址"))}return t?Promise.resolve(t):Promise.reject(new Error("未指定分离地址"))}async loadFenliData(){X(F("load fenli data.","STEP"));try{const e=await a("https://api.egooidea.com/fenli/list");if(e.ok){const t=await e.json();if(t&&0==t.ret)return Promise.resolve(t.data);throw X(F("load fenli data error.","ERROR")),new Error("can't load fenli data.")}throw new Error("can't load fenli data.")}catch(e){throw e}}shutdownHandler(){X(F("shutdown"))}}const Z="aes-256-cbc",ee=16,te="utf8",se="hex";function re(e,t){try{const s=JSON.stringify(t),r=P.randomBytes(ee),i=P.createCipheriv(Z,e,r),n=i.update(s,te,se)+i.final(se),a={iv:r.toString(se),data:n};return JSON.stringify(a)}catch(e){throw e}}function ie(e,{iv:t,data:s}){try{const r=Buffer.from(t,se),i=P.createDecipheriv(Z,e,r),n=i.update(s,se,te)+i.final(te);return JSON.parse(n)}catch(e){throw e}}var ne=e=>{const t=function(e){return P.createHash("sha256").update(e).digest()}(e);return{encrypt:re.bind(null,t),decrypt:ie.bind(null,t)}};const ae=e(import.meta.url),oe=C("SSHClient");class ce{useCipher;configFilePath;client;serverCfg;constructor(e){this.useCipher=!0,e&&(this.useCipher=!1),this.configFilePath=e||_("server_config.json")}async loadServerConfig(){if(oe(F("load server config.","STEP")),e=this.configFilePath,/^(http(s)?:)?\/\//i.test(e))try{const e=await a(this.configFilePath,{});if(e.ok){const t=await e.json(),s=this.useCipher?await this.cipherDecrypt(t):t;return this.serverCfg=s,Promise.resolve(this.serverCfg)}throw new Error(e.statusText)}catch(e){throw e}else try{let e=t.resolve(this.configFilePath);return this.serverCfg=ae(e),Promise.resolve(this.serverCfg)}catch(e){throw e}var e}async cipherDecrypt(e){let s=t.join(y.homedir(),".egookey");try{const t=await l.readFile(s,"utf8"),r=ne(t).decrypt(e);let i;return i="string"==typeof r?JSON.parse(r):r,Promise.resolve(i)}catch(e){throw e}}connect(){return oe(F("connecting...","STEP")),new Promise(((e,t)=>{let s=new w;s.on("ready",(()=>{this.client=s,oe(F("ssh connected.","STEP")),e()})).on("error",(e=>{t(e)})).connect({host:this.serverCfg.host,port:this.serverCfg.port,username:this.serverCfg.username,password:this.serverCfg.password,forceIPv4:!0})}))}openSFTP(){return new Promise(((e,t)=>{this.client.sftp(((s,r)=>{s?t(s):(oe(F("sftp opened.","STEP")),e(r))}))}))}execCmd(e){return new Promise(((t,s)=>{this.client.exec(e,(function(e,r){e&&s(e),r.on("end",(function(e,s){t()})).on("data",(function(e){console.log(e.toString())})).stderr.on("data",(function(e){console.log(e.toString())}))}))}))}close(){return new Promise(((e,t)=>{try{this.client.end(),oe(F("ssh closed.","STEP")),e()}catch(e){t(e)}}))}}const le=e(import.meta.url),he=C("VersionCtrl");class ue{static FILENAME="config_versions.json";assets;included=!1;confPath="";constructor(){this.confPath=U(ue.FILENAME)}init(){if(!this.included)try{this.assets=le(this.confPath)||{},this.included=!0}catch(e){this.assets={}}}checkUpdate(e){const t=o.get(this.assets,`${e}.ttl`),s=(new Date).getTime();return!t||s>t}save(e){const t=(new Date).getTime();return o.set(this.assets,`${e}.ttl`,t+1728e5),this.assets?(he(F("save conf.","STEP")),l.writeFile(this.confPath,JSON.stringify(this.assets))):Promise.resolve()}}const pe=e(import.meta.url),de=C("UserConf");class me{assets;included;confPath;constructor(){this.assets=null,this.included=!1,this.confPath=""}include(e=null){return this.confPath=U(e||"user_conf.json"),this.included?Promise.resolve():this.createDataDir().then((e=>{if(e){try{this.assets=pe(this.confPath)||{},de(F("include user conf.","STEP"))}catch(e){}return Promise.resolve()}de(F("找不到data文件夹","ERROR"))}))}async createDataDir(){return q.createFolder(j("data"))}add(e,t){this.assets||(this.assets={});let s=e.split(".");s.reduce(((e,r,i)=>i<s.length-1?(e[r]||(e[r]={}),e[r]):(e[r]=t,e)),this.assets)}get(e){return e.split(".").reduce(((e,t,s)=>e?e[t]:null),this.assets)}save(){return this.assets?(de(F("save user conf.","STEP")),l.writeFile(this.confPath,JSON.stringify(this.assets))):Promise.resolve()}static __instance;static getInstance(){return me.__instance||(me.__instance=new me),me.__instance}}const fe=e(import.meta.url),ge=C("ConfCenter");class we{versionCtrl;assets={};included=!1;constructor(){this.versionCtrl=new ue,this.assets={}}async include(e,t=!1){if(this.included)return Promise.resolve();{ge(F("include","STEP")),await me.getInstance().createDataDir(),await this.versionCtrl.init();const s=U(`${e}.json`);(t||this.versionCtrl.checkUpdate(e))&&(await this.load(e,s),await this.versionCtrl.save(e));try{this.assets[e]=fe(s)||{},this.included=!0}catch(t){this.assets[e]={}}}}async load(e,t){return ge(F("load","STEP")),new Promise(((s,r)=>{a(_(`${e}.json`)).then((e=>{if(e.ok){var i=c.createWriteStream(t);e.body.pipe(i).on("finish",(()=>{s(!0)}))}else r(e.statusText)})).catch((e=>r(e)))}))}get(e,t){const s=this.assets[e];return s?o.get(s,t):null}static __instance;static getInstance(){return we.__instance||(we.__instance=new we),we.__instance}}const ye=C("GitMode");class Pe{constructor(e){e.hooks.complete.tapPromise("GitModePlugin",(()=>this.sync(e)))}async sync(e){const t=e.ssh;await this.execGitCmd(t,"status"),await this.execGitCmd(t,"add . --all"),await this.execGitCmd(t,'commit -m "update"'),await this.execGitCmd(t,"push origin master")}execGitCmd(e,t){const s=`git -C /media/gitee/pages ${t}`;return ye(F(s,"STEP")),e.execCmd(s)}}const $e=e(import.meta.url),ve=C("ServerHash"),be="md5",xe="",Se=32,Ee="filehash.json";class Te{fileInfos={};constructor(e){e.hooks.beforeQuery.tapPromise("ServerHashPlugin",(t=>this.beforeBuildQuery(e,t))),e.hooks.afterQuery.tapPromise("ServerHashPlugin",(t=>this.afterBuildQuery(e,t))),e.hooks.afterUpload.tapPromise("ServerHashPlugin",(()=>this.afterUploadQuery())),e.hooks.query.tapPromise("ServerHashPlugin",((e,t)=>this.onQueryFile(e,t))),e.hooks.dispose.tapPromise("ServerHashPlugin",(()=>this.clear()))}async beforeBuildQuery(e,t){await this.include(e.sftp,t.source,t.remote)}async afterBuildQuery(e,t){if(await this.save(t)){const s=this.fileInfos[t.source];e.pushQuery(s.filePath,s.serverPath,"file")}}async afterUploadQuery(){await this.clear()}async onQueryFile(e,t){const s=e.src;if(this.isNotHashFile(s)){if(!await this.compare(s,t))return e;ve(F("skip: "+F(s,"PATH")))}}include(e,s,r){const i={filePath:t.join(s,Ee),serverPath:H(r,Ee),assets:null,saved:!1};return this.fileInfos[s]=i,D(e.fastGet,e,!0,i.serverPath,i.filePath).then((e=>{if(e){ve(F("server hash file loaded.","STEP"));let e=t.resolve(i.filePath);try{i.assets=$e(e)||{},ve(F("include hash file.","STEP"))}catch(e){Promise.reject(new Error("require hash file error."))}return Promise.resolve()}return ve(F("server hash file isn't exists.","STEP")),Promise.resolve()}))}save(e){const t=this.fileInfos[e.source];return t&&t.assets?l.writeFile(t.filePath,JSON.stringify(t.assets)).then((()=>(t.saved=!0,ve(F(`save hash file(${t.filePath}).`,"STEP")),Promise.resolve(!0)))):Promise.resolve(!1)}clear(){ve(F("remove hash files.","STEP"));const e=Object.values(this.fileInfos).map((e=>e.saved&&e.filePath?l.unlink(e.filePath):Promise.resolve()));return Promise.all(e)}compare(e,s){const r=this.fileInfos[s.source];return l.readFile(e).then((s=>{let i="",n=t.resolve(e);r.assets&&r.assets[n]&&(i=r.assets[n]);let a=this.generateHash(s);return i!==a?(i=a,r.assets||(r.assets={}),r.assets[n]=i,Promise.resolve(!1)):Promise.resolve(!0)}))}generateHash(e){return e?xe+P.createHash(be).update(e).digest("hex").slice(0,Se):""}isNotHashFile(e){return t.basename(e)!==Ee}}const ke=C("Replacer");class Ie{patchInstaller;constructor(e,t){e.hooks.afterInit.tap("ReplacerPlugin",(()=>{this.patchInstaller=new L,this.patchInstaller.registers(t)})),e.hooks.query.tapPromise("ReplacerPlugin",((e,t)=>this.onQueryFile(e,t))),e.hooks.afterQuery.tapPromise("ReplacerPlugin",(()=>this.patchInstaller.runAll())),e.hooks.afterUpload.tapPromise("ReplacerPlugin",(()=>(ke(F("clear","STEP")),this.patchInstaller.clear()))),e.hooks.dispose.tapPromise("ReplacerPlugin",(()=>(ke(F("clear","STEP")),this.patchInstaller.clear())))}async onQueryFile(e,s){const r=e.src,i=this.patchInstaller.detectAndAdd(r);if(i){let n=t.basename(r),a=t.extname(n);"index"==t.basename(r,a)&&[".html",".shtml",".htm"].indexOf(a)>=0&&(s.visitor=n);let o=i.dest;return ke(F(`modify ${o}`,"STEP")),new je(o,e.dest,e.type)}}}class Fe extends M{constructor(){super("InjectedFilePatch")}detect(e){const s=t.extname(e);return[".html",".shtml",".htm"].indexOf(s)>=0}async prepare(){return we.getInstance().include("upload_config")}run(e){return this._replace()}_replace(){return e=>{const t=we.getInstance().get("upload_config","injected.jspath"),s=we.getInstance().get("upload_config","injected.csp");let r,i=we.getInstance().get("upload_config","injected.blockScripts");return i=JSON.stringify(i),r=s?e.replace("<head>",`<head>\n<meta http-equiv="Content-Security-Policy" content="${s}">`):e,t&&(r=r.replace("</head>",`\x3c!-- 预览专用js --\x3e\n<script src="${t}"><\/script>\n<script>\nblockScripts(${i})<\/script>\n</head>`)),r}}}class Ce extends M{constructor(){super("ReplacementPatch")}detect(e){const s=t.extname(e);return[".html",".shtml",".htm",".css",".js"].indexOf(s)>=0}async prepare(){return we.getInstance().include("upload_config")}run(e){const s=we.getInstance().get("upload_config","replacements");if(s&&Array.isArray(s)){const r=t.extname(e.src);return this._replace(s,r)}throw new Error("请检查upload_config replacements配置，应该为数组")}_replace(e,t){return s=>e.reduce(((e,s)=>("html"===s.ext?[".shtml",".html","htm"]:[]).indexOf(t)>=0&&s.rules&&s.rules.length>0?s.rules.reduce(((e,t)=>{try{let s=t.pattern;if(s){let r=new RegExp(s,"g");e=e.replace(r,t.replace)}}catch(e){throw e}return e}),e):e),s)}}const Re=C("Uploader");class je{src;dest;type;constructor(e,t,s){this.src=e,this.dest=t,this.type=s}toString(){return this.src+" > "+this.dest}}class He{source;remote;type;visitor;constructor(e,t,s){this.source=e,this.remote=t,this.type=s}}class _e extends I{uploads;querys;sftp;ssh;remotePath;previewUrl;isFile;hooks={};constructor(){super(),this.hooks={beforeInit:new $,afterInit:new $,beforeQuery:new $(["uinfo"]),query:new v(["qinfo","info"]),afterQuery:new $(["uinfo"]),beforeUpload:new $,afterUpload:new $,complete:new $,dispose:new $},this.uploads=[],this.querys=[]}async run(e,t,s,r){try{await this.init(e,t,s,r),await this.connect(),await this.start(),await this.close(),Re(F("publish success.","SUCCESS")),Re(F("preview url: "+this.getPreviewURLs().map((e=>F(e,"UNDERLINE"))).join(" , ")))}catch(e){throw Re(F("publish fail.","ERROR")),Re(F(e,"ERROR")),Re(e.stack),e}}async init(e,t,s,r=!1){await we.getInstance().include("upload_config",r);const i=we.getInstance().get("upload_config",`mode.${t}`);try{this.remotePath=i.remoteRootPath,this.previewUrl=i.previewBaseUrl}catch(e){throw new Error("配置文件mode中找不到remoteRootPath和previewBaseUrl，请检查")}let n=[];i.replaced&&!s.replaced&&n.push(new Ce),i.injected&&!s.injected&&n.push(new Fe),new Ie(this,n),s.cache||new Te(this),"git"==t.toLowerCase()&&new Pe(this),await this.hooks.beforeInit.promise(),this.uploads=await this.isSourcesValid(e,this.remotePath),await this.hooks.afterInit.promise()}async connect(e=null){return this.ssh=new ce(e),await this.ssh.loadServerConfig(),await this.ssh.connect(),this.sftp=await this.ssh.openSFTP(),this.ssh}async close(){return await this.ssh.close()}getPreviewURLs(){return this.uploads.map((e=>this.previewUrl+t.basename(e.source)+"/"+(e.visitor||"")))}async start(){return this.uploads.reduce((async(e,t)=>{try{return await e,Re(F(`start query ${F(t.source,"PATH")}`,"STEP")),await this.hooks.beforeQuery.promise(t),await this.buildQuery(t),await this.hooks.afterQuery.promise(t),Re(F(`finish query ${F(t.source,"PATH")}`,"STEP")),Promise.resolve()}catch(e){return Promise.reject(e)}}),Promise.resolve()).then((async()=>{await this.hooks.beforeUpload.promise(),await this.uploadQuerys(this.sftp,this.querys),await this.hooks.afterUpload.promise()})).then((()=>this.hooks.complete.promise()))}async isSourcesValid(e,s){return e.reduce((async(e,r)=>{const i=await e;let n,a;try{n=await l.lstat(r)}catch(e){throw Re(F(`上传路径:${r} 不正确`,"ERROR")),e}return a=n.isDirectory()?new He(r,H(s,t.basename(r)),"dir"):new He(r,s,"file"),i.push(a),i}),Promise.resolve([]))}pushQuery(e,t,s){this.querys.push(new je(e,t,s))}buildQuery(e){return O(e.source,(async({filePath:s,type:r})=>{let i=t.basename(e.source),n=t.relative(e.source,s).split(t.sep);const a=H(this.remotePath,i,n);let o=new je(s,a,r);if("dir"==r)this.querys.push(o);else{const t=await this.hooks.query.promise(o,e);t&&(o=t,this.querys.push(o))}}))}uploadQuerys(e,t){return Re(F("start upload query.","STEP")),new Promise(((s,r)=>{this.uploadQuery(e,t,0).then((e=>{e?(Re(F("finish upload query.","STEP")),s()):r("query upload errors somewhere.")})).catch((e=>{r(e)}))}))}uploadQuery(e,t,s){if(s===t.length)return t=null,!0;let r,{src:i,dest:n,type:a}=t[s];return"dir"===a?r=D(e.opendir,e,!0,n).then((t=>t||(Re(F("mkdir: "+F(n,"PATH"))),D(e.mkdir,e,!1,n)))).then((t=>{if(!t)return Re(F("chmod directory: "+F(n,"PATH"))),D(e.chmod,e,!1,n,"0777")})).then((()=>(s++,this.uploadQuery(e,t,s)))):"file"===a&&(r=D(e.open,e,!0,n,"r").then((t=>{if(t)return Re(F("rm: "+F(n,"PATH"))),D(e.unlink,e,!1,n)})).then((()=>(Re(F("cp: "+F(i,"PATH")+" > "+F(n,"PATH"))),D(e.fastPut,e,!1,i,n)))).then((()=>(s++,this.uploadQuery(e,t,s))))),r}shutdownHandler(){this.hooks.dispose.promise()}}const Ue=C("DefaultTemplatePlugin");class Oe{constructor(e){console.log("DefaultTemplatePlugin"),e.hooks.template.tap("DefaultTemplatePlugin",((t,s)=>(console.log("DefaultTemplatePlugin tap"),Ue(F("render","STEP")),this.render(e,t,s))))}render(e,s,r){const i=t.relative(s.css,s.image),{properties:n,coordinates:a}=r;let o="";o+=`.spr{background-image: url(${i});background-size: ${n.width}px ${n.height}px;}\n`;for(let s in a){const r=a[s];s=t.relative(e.source,s),s=s.replace(/\.[png|jpeg|jpg|webp]*/,""),o+=`.spr.${s}{background-position: ${r.x}px ${r.y}px;}\n`}return o}}const De=C("SCSSTemplatePlugin");class Ae{prefix="spr";unitTransformFunction;constructor(e,s){this.prefix=`${t.basename(e.source)}_spr`,this.unitTransformFunction=s,e.hooks.template.tap("SCSSTemplatePlugin",((t,s)=>(De(F("render","STEP")),this.render(e,t,s))))}transformUnit(e){return this.unitTransformFunction?this.unitTransformFunction.replace("$$",e):e}render(e,s,r){const i=t.relative(s.css,s.image),{properties:n,coordinates:a}=r,o=Object.keys(a),c=t.basename(e.source);let l='@use "sass:map";\n';return l+=`\n    $${this.prefix}_createtime: '${(new Date).toLocaleString()}';\n    // nested map.\n    $${this.prefix}: (\n      ${o.map((s=>{const r=a[s];let n=t.relative(e.source,s);return n=n.replace(/\.[png|jpeg|jpg|webp]*/,""),`${n}: (\n          name: '${n}',\n          x: ${r.x}px,\n          y: ${r.y}px,\n          width: ${r.width}px,\n          height: ${r.height}px,\n          image: '${i}'\n        )`})).join(",")}\n    );\n`,l+=`\n    @mixin ${c}-spr($name, $scale: 1) {\n      @if map.has-key($${this.prefix}, $name) {\n      } @else {\n        @error "${c} 中未找到 #{$name}";\n      }\n      $spr-width: map.get($${this.prefix}, $name, "width");\n      $spr-height: map.get($${this.prefix}, $name, "height");\n      $spr-image: map.get($${this.prefix}, $name, "image");\n      $spr-offset-x: map.get($${this.prefix}, $name, "x") * -1;\n      $spr-offset-y: map.get($${this.prefix}, $name, "y") * -1;\n      width: ${this.transformUnit("$spr-width")} * $scale;\n      height: ${this.transformUnit("$spr-height")} * $scale;\n      background-image: url("#{$spr-image}");\n      background-position: ${this.transformUnit("$spr-offset-x")} * $scale ${this.transformUnit("$spr-offset-y")} * $scale;\n      background-size: ${this.transformUnit(`${n.width}px`)} * $scale ${this.transformUnit(`${n.height}px`)} * $scale;\n    }\n    @mixin ${c}-spr-mask($name, $scale: 1) {\n      @if map.has-key($${this.prefix}, $name) {\n      } @else {\n        @error "${c} 中未找到 #{$name}";\n      }\n      $spr-width: map.get($${this.prefix}, $name, "width");\n      $spr-height: map.get($${this.prefix}, $name, "height");\n      $spr-image: map.get($${this.prefix}, $name, "image");\n      $spr-offset-x: map.get($${this.prefix}, $name, "x") * -1;\n      $spr-offset-y: map.get($${this.prefix}, $name, "y") * -1;\n      -webkit-mask-image: url("#{$spr-image}");\n      -webkit-mask-position: ${this.transformUnit("$spr-offset-x")} * $scale ${this.transformUnit("$spr-offset-y")} * $scale;\n      -webkit-mask-size: ${this.transformUnit(`${n.width}px`)} * $scale ${this.transformUnit(`${n.height}px`)} * $scale;\n    }\n    `,l=S.css(l,{end_with_newline:!0,indent_size:2}),l}}const Qe=C("Spritesheet"),Ne="_spr";class qe extends I{source;template;padding;algorithm;retina;hooks={};files=[];constructor(e,t,s,r,i){super(),"/"===e.substr(e.length-1)&&(e=e.substr(0,e.length-1)),this.source=e,this.template=t||"default",this.padding=r,this.algorithm=i,this.hooks={beforeInit:new $,afterInit:new $,template:new b(["target","result"]),complete:new $,dispose:new $},console.log(this.template),"simple"===this.template?new Oe(this):"scss"!==this.template&&"sass"!==this.template||new Ae(this,s)}async run(){try{await this.init(this.source),await this.start(),Qe(F("spritesheet success.","SUCCESS"))}catch(e){throw Qe(F("spritesheet fail.","ERROR")),Qe(F(e,"ERROR")),Qe(e.stack),e}}detectIsImage(e){const s=t.extname(e);return[".png","jpeg","jpg","webp"].indexOf(s)>=0}async init(e){Qe(F("spritesheet init","STEP")),this.files=[],await this.hooks.beforeInit.promise(),await O(e,(async({filePath:e,type:t})=>{"file"===t&&this.detectIsImage(e)&&this.files.push(e)})),await this.hooks.afterInit.promise()}async start(){if(Qe(F(`spritesheet start ${this.source}`,"STEP")),!this.files||this.files.length<=0)return void Qe(F("no images","ERROR"));await q.createFolder(this.source+Ne),Qe(F(`spritesheet create folder ${this.source+Ne}`,"STEP"));const e={image:this.source+Ne+"/spr.png",css:this.source+Ne+"/spr.css"};return"scss"===this.template&&(e.css=this.source+Ne+"/spr.scss"),new Promise(((t,s)=>{x.run({src:this.files,padding:this.padding,algorithm:this.algorithm},((r,i)=>{if(r)throw r;const n=this.hooks.template.call(e,i);n||s(new Error(`template error ${n}`)),Promise.all([l.writeFile(e.image,i.image,"binary"),l.writeFile(e.css,n)]).then((()=>{t()}))}))}))}shutdownHandler(){Qe(F("shutdown"))}}const Le=C("Docx2Html");let Me=[];class We extends I{input;output;imageFolder;filenamePrev="index";filenameIndex=1;imageCounter=1;curFilename="";constructor(e,t){super(),this.input=e,this.output=t}async run(){let{input:e,output:s}=this;const r=await l.lstat(e);if(r.isDirectory()){if(!s)throw Le(F("请设置输出路径 -o","ERROR")),new Error("output unfound");await q.createFolder(s);const r=t.join(s,"ossweb-img");await q.createFolder(r),await O(e,(async({filePath:e,type:r})=>{if("file"===r&&".docx"==t.extname(e)){Le(`start --\x3e> ${e}`),this.imageCounter=1,this.curFilename=`${this.filenamePrev}${this.filenameIndex}`;let r=t.join(s,"ossweb-img",this.curFilename);await q.createFolder(r),await this.convertDocx(e,this.curFilename),this.filenameIndex++,Le(" ------- ")}})),await this.saveFileMapping()}else{if(!r.isFile())throw Le(F("请检查路径","ERROR")),new Error("input error");if(!s){s=t.basename(e),s=t.join(t.dirname(e),s.split(".")[0]),this.output=s,await q.createFolder(s);const r=t.join(s,"ossweb-img");await q.createFolder(r),Le(`start --\x3e> ${e}`),this.imageCounter=1,await this.convertDocx(e,this.filenamePrev),Le(" ------- ")}}}async saveHtml(e,s){const{output:r}=this;let i=t.join(r,s+".html");await l.writeFile(i,e,"utf-8"),Le(`${i} was saved.`)}async modifyHtml(e){let t=T(e);if(0===e.indexOf("<p")){let e=t("p").eq(0).html();Le(`title: ${e}`),t("p").eq(0).replaceWith(`<h2>${e}</h2>`)}return t("img").addClass("docx-img").attr("alt",""),t("table").addClass("docx-table"),t("p").each((function(e,s){0===t(s).text().indexOf("-")&&t(s).addClass("docx-indent1")})),e=t.html()}async convertDocx(e,s){try{let r=await E.convertToHtml({path:e},{convertImage:E.images.imgElement((async e=>{const s=await e.readAsBase64String();let r=e.contentType.split("/").pop();"x-emf"===r&&(r="png");const i=`docx-image${this.imageCounter}.${r}`;let n=t.join(this.output,"ossweb-img",this.curFilename);const a=t.join(n,i);return await l.writeFile(a,s,"base64"),Le(`${a} was saved.`),this.imageCounter++,{src:t.relative(this.output,a)}}))}),i=t.basename(e),n=r.value;n=await this.modifyHtml(n);let a=T(n),o=a("h2").eq(0).text();n=a.html(),Me.push({url:`${this.curFilename}.html`,file:i,title:o}),n=await S.html(n,{indent_size:4}),await this.saveHtml(n,s)}catch(e){console.error(e)}}async saveFileMapping(){const{output:e}=this;let s=t.join(e,"all.json"),r=JSON.stringify(Me);r=S.js(r,{indent_size:4,space_in_empty_paren:!0}),await l.writeFile(s,r,"utf-8"),Le(`${s} was saved.`)}shutdownHandler(){Le(F("shutdown"))}}const Be=e(import.meta.url)("../package.json"),Ge=t.dirname(k(import.meta.url));var Je;let ze;Je=t.join(Ge,".."),R=Je,s.scriptName("egoo").version(Be.version).alias("version","v").command({command:"publish <source> [others...]",aliases:["pub"],describe:"上传文件到服务器",builder:{top:{describe:"等同于--mode egoo",type:"boolean",default:!1},egoo:{alias:"e",describe:"上传到egoodev.top。等同于--mode egoo",type:"boolean",default:!1},pinna:{alias:"p",describe:"上传到pinnadev.top。等同于--mode pinna --ignore-injected --ignore-replaced",type:"boolean",default:!1},mode:{describe:"上传的模式，可以是top/pinna，默认为top，上传到egoodev.top",type:"string",default:"egoo"},"ignore-cache":{describe:"忽略缓存，全量上传",type:"boolean",default:!1},"ignore-injected":{describe:"忽略文件注入",type:"boolean",default:!1},"ignore-replaced":{describe:"忽略文本替换",type:"boolean",default:!1},"config-forcereload":{describe:"重新加载配置文件",type:"boolean",default:!1}},handler:async e=>{let{source:t,others:s,top:r,egoo:i,pinna:n,mode:a}=e;a=a.toLowerCase(),r||i?a="egoo":n&&(a="pinna");let o={};for(const t in e)t.indexOf("ignore-")>=0&&(o[t.replace("ignore-","")]=e[t]);const c=[t].concat(s),l=e["config-forcereload"],h=new _e;ze=h,await h.run(c,a,o,l)}}).command({command:"fenli <source> [others...]",describe:"分离",builder:{url:{alias:"u",describe:"指定分离路径。如（//game.gtimg.cn/images/dnf/cp/）",type:"string"},aliases:{alias:"a",describe:"项目所属游戏的别名，根据游戏找到对应分离路径。如地下城与勇士为dnf，QQ飞车为speed，王者荣耀为pvp。\b更多信息请查看https://fenli.egooidea.com",type:"string"},forcehttps:{describe:"强制https，会在分离地址前加上https:，同时，http: 地址会发出错误提示",type:"boolean"}},handler:async e=>{const{source:t,others:s,url:r,aliases:i,forcehttps:n}=e,a=[t].concat(s);let o=n;i&&"dnf"==i.toLowerCase()&&(o=!0);const c=new Y(a,o);ze=c,await c.run(i,r)}}).command({command:"docx2html <source>",describe:"docx转换成html",builder:{output:{alias:"o",type:"string"}},handler:async e=>{const{source:t,output:s}=e,r=new We(t,s);ze=r,await r.run()}}).command({command:"spritesheet <source>",aliases:["spr"],describe:"生成雪碧图",builder:{template:{alias:"t",describe:"使用的模版。scss是一些mixin，可以import使用",type:"string",default:""},scale:{describe:"图片的倍率。设置为2表示图片尺寸是2倍图，对应雪碧图的background-size是图片大小的一半。如LOL LCU的设置。",type:"number",default:1},unit_transform_function:{describe:"单位转换函数。当模板是scss时，px单位使用的转换函数。主要用于2倍图等场景。格式如下：r2($$)，$$会转换为具体px单位。r2函数需在外部scss中定义。",type:"string",default:""},retina:{describe:"是否生成retina图",type:"boolean",default:!1},padding:{describe:"图片之间的间隙",type:"number",default:2},algorithm:{alias:"a",describe:'[可选值: "top-down", "left-right", "binary-tree", "diagonal", "alt-diagonal"] [默认值: "left-right"]',type:"string",default:"binary-tree"}},handler:async e=>{let{source:t,template:s,unit_transform_function:r,padding:i,algorithm:n}=e;const a=new qe(t,s,r,i,n);ze=a,await a.run()}}).demandCommand(1,"请指定命令").onFinishCommand((e=>{process.exit()})).fail(((e,t)=>{console.error(t),ze&&(console.log("shutdown"),ze.emit("shutdown")),process.exit(1)})).help().argv,process.on("uncaughtException",(function(e){console.error(e),console.log(r.red(e.toString())),ze&&(console.log("shutdown"),ze.emit("shutdown"))})),process.on("SIGINT",(function(){ze&&(console.log("shutdown"),ze.emit("shutdown")),process.exit()}));
